version: '3.8'

services:
  api:
    build:
      context: ..
      dockerfile: tradingbot/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ../src:/app/src
      - ../tests:/app/tests
    command: ["uvicorn", "src.backend.api_gateway.app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    environment:
      - ENVIRONMENT=development
      - DEBUG=1
      - MONGODB_URL=mongodb://mongodb:27017/tradingbot
      - REDIS_URL=redis://redis:6379/0
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - AI_MODEL_MODE=LOCAL
      - LOCAL_MODEL_ENDPOINT=http://ollama:11434
      - LOCAL_MODEL_NAME=deepseek-sentiment
      - MONGODB_URL=mongodb://mongodb:27017/tradingbot
      - PROMETHEUS_MULTIPROC_DIR=/tmp/prometheus_multiproc
    depends_on:
      - mongodb
      - redis
      - ollama

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11435:11434"
    volumes:
      - ollama_data:/root/.ollama
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:11434/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 8G


  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    ports:
      - "3000:80"
    volumes:
      - ./frontend/trading-ui:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8000
    depends_on:
      - api

  mongodb:
    image: mongo:latest
    ports:
      - "27018:27017"
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongodb/init.js:/docker-entrypoint-initdb.d/init.js:ro
    environment:
      - MONGO_INITDB_DATABASE=tradingbot

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}

  prometheus:
    image: prom/prometheus:v2.45.0
    ports:
      - "9090:9090"
    volumes:
      - ../docker/prometheus:/etc/prometheus:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    depends_on:
      - prometheus

volumes:
  mongodb_data:
  redis_data:
  prometheus_data:
  grafana_data:
  ollama_data:
