repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
      - id: check-merge-conflict
      - id: detect-private-key

  - repo: https://github.com/psf/black
    rev: 23.3.0
    hooks:
      - id: black
        language_version: python3.11

  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: ["--profile", "black"]

  - repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        additional_dependencies:
          - flake8-docstrings
          - flake8-quotes
          - flake8-bugbear

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.3.0
    hooks:
      - id: mypy
        additional_dependencies:
          - types-requests
          - types-PyYAML
          - types-python-dateutil

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.0-alpha.9-for-vscode
    hooks:
      - id: prettier
        types_or: [javascript, jsx, ts, tsx, css, json]

  - repo: local
    hooks:
      - id: pytest
        name: pytest
        entry: pytest
        language: system
        pass_filenames: false
        always_run: true

      - id: check-requirements
        name: Check requirements
        entry: python -c "import pkg_resources; pkg_resources.require(open('requirements.txt').readlines())"
        language: system
        files: requirements.*\.txt$
        pass_filenames: false

      - id: check-version
        name: Check version
        entry: python -c "import configparser; c = configparser.ConfigParser(); c.read('pyproject.toml'); assert c['project']['version'] == open('VERSION').read().strip()"
        language: system
        files: ^(pyproject\.toml|VERSION)$
        pass_filenames: false
