events {
    worker_connections 1024;
}

http {
    upstream backend_production {
        server backend:8000;
    }

    upstream backend_canary {
        server backend-canary:8000;
    }

    upstream frontend_production {
        server frontend:3000;
    }

    upstream frontend_canary {
        server frontend-canary:3000;
    }

    # 金丝雀路由规则
    split_clients "${remote_addr}${remote_port}" $backend_pool {
        10%     backend_canary;
        *       backend_production;
    }

    split_clients "${remote_addr}${remote_port}" $frontend_pool {
        10%     frontend_canary;
        *       frontend_production;
    }

    # 监控指标
    map $status $is_error {
        ~^[45]  1;
        default 0;
    }

    log_format metrics '$time_local|$status|$request_time|$upstream_addr|$upstream_response_time|$is_error';
    access_log /var/log/nginx/metrics.log metrics;

    server {
        listen 80;
        
        # API 路由
        location /api/ {
            proxy_pass http://$backend_pool;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            
            # 错误率监控
            log_format canary_metrics 'service="$backend_pool" status="$status"';
            access_log /var/log/nginx/canary.log canary_metrics;
        }

        # WebSocket 路由
        location /ws/ {
            proxy_pass http://$backend_pool;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
        }

        # 前端路由
        location / {
            proxy_pass http://$frontend_pool;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # 健康检查端点
        location /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 'healthy\n';
        }

        # 监控指标端点
        location /metrics {
            stub_status on;
            access_log off;
        }
    }
} 