{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nexport const useAuthContext = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const signup = useCallback(async (email, username, password) => {\n    try {\n      const response = await fetch('/api/v1/auth/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          username,\n          password\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Signup failed:', errorData);\n        return false;\n      }\n      const data = await response.json();\n      localStorage.setItem('token', data.access_token);\n\n      // Set user data\n      const newUser = {\n        id: username,\n        // Temporary ID until we get proper ID from backend\n        email,\n        username,\n        roles: [{\n          name: 'backend_developer',\n          permissions: ['execute_market_maker_trades']\n        }]\n      };\n      setUser(newUser);\n      setIsAuthenticated(true);\n      return true;\n    } catch (error) {\n      console.error('Signup error:', error);\n      return false;\n    }\n  }, []);\n  const login = useCallback(async (email, password) => {\n    try {\n      const formData = new FormData();\n      formData.append('username', email); // OAuth2 expects username field\n      formData.append('password', password);\n      const response = await fetch('/api/v1/auth/login', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Login failed:', errorData);\n        return false;\n      }\n      const data = await response.json();\n      localStorage.setItem('token', data.access_token);\n\n      // Set user data\n      const newUser = {\n        id: email.split('@')[0],\n        // Temporary ID until we get proper ID from backend\n        email,\n        username: email.split('@')[0],\n        roles: [{\n          name: 'backend_developer',\n          permissions: ['execute_market_maker_trades']\n        }]\n      };\n      setUser(newUser);\n      setIsAuthenticated(true);\n      return true;\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    }\n  }, []);\n  const logout = useCallback(() => {\n    localStorage.removeItem('token');\n    setUser(null);\n    setIsAuthenticated(false);\n  }, []);\n  return {\n    user,\n    isAuthenticated,\n    login,\n    signup,\n    logout\n  };\n};\n_s(useAuthContext, \"jL/mQbDhzfco1WrXhSTqrzLgryA=\");","map":{"version":3,"names":["useState","useCallback","useAuthContext","_s","user","setUser","isAuthenticated","setIsAuthenticated","signup","email","username","password","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","console","error","data","localStorage","setItem","access_token","newUser","id","roles","name","permissions","login","formData","FormData","append","split","logout","removeItem"],"sources":["/home/ubuntu/repos/tradingbot/src/frontend/src/hooks/useAuth.ts"],"sourcesContent":["import { useState, useCallback } from 'react';\n\ninterface User {\n  id: string;\n  email: string;\n  username?: string;\n  roles?: Array<{\n    name: string;\n    permissions: string[];\n  }>;\n}\n\nexport const useAuthContext = () => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\n\n  const signup = useCallback(async (email: string, username: string, password: string) => {\n    try {\n      const response = await fetch('/api/v1/auth/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, username, password }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Signup failed:', errorData);\n        return false;\n      }\n\n      const data = await response.json();\n      localStorage.setItem('token', data.access_token);\n      \n      // Set user data\n      const newUser: User = {\n        id: username, // Temporary ID until we get proper ID from backend\n        email,\n        username,\n        roles: [{ name: 'backend_developer', permissions: ['execute_market_maker_trades'] }]\n      };\n      setUser(newUser);\n      setIsAuthenticated(true);\n      return true;\n    } catch (error) {\n      console.error('Signup error:', error);\n      return false;\n    }\n  }, []);\n\n  const login = useCallback(async (email: string, password: string) => {\n    try {\n      const formData = new FormData();\n      formData.append('username', email);  // OAuth2 expects username field\n      formData.append('password', password);\n\n      const response = await fetch('/api/v1/auth/login', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Login failed:', errorData);\n        return false;\n      }\n\n      const data = await response.json();\n      localStorage.setItem('token', data.access_token);\n      \n      // Set user data\n      const newUser: User = {\n        id: email.split('@')[0], // Temporary ID until we get proper ID from backend\n        email,\n        username: email.split('@')[0],\n        roles: [{ name: 'backend_developer', permissions: ['execute_market_maker_trades'] }]\n      };\n      setUser(newUser);\n      setIsAuthenticated(true);\n      return true;\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    }\n  }, []);\n\n  const logout = useCallback(() => {\n    localStorage.removeItem('token');\n    setUser(null);\n    setIsAuthenticated(false);\n  }, []);\n\n  return {\n    user,\n    isAuthenticated,\n    login,\n    signup,\n    logout,\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}