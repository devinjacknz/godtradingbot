{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/repos/tradingbot/src/frontend/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext } from 'react';\nimport { useAuthContext as useAuth } from '../hooks/useAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const auth = useAuth();\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: auth,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"YuJWYXaKIY31b1y7U6yy3IXSxQA=\", false, function () {\n  return [useAuth];\n});\n_c = AuthProvider;\nexport const useAuthContext = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuthContext must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuthContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useAuthContext","useAuth","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","auth","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s2","context","Error","$RefreshReg$"],"sources":["/home/ubuntu/repos/tradingbot/src/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, ReactNode } from 'react';\nimport { useAuthContext as useAuth } from '../hooks/useAuth';\n\ninterface AuthContextType {\n  user: any;\n  isAuthenticated: boolean;\n  login: (formData: { email: string; password: string }) => Promise<boolean>;\n  signup: (email: string, username: string, password: string) => Promise<boolean>;\n  logout: () => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const auth = useAuth();\n\n  return (\n    <AuthContext.Provider value={auth}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuthContext = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuthContext must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAmB,OAAO;AACnE,SAASC,cAAc,IAAIC,OAAO,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU7D,MAAMC,WAAW,gBAAGN,aAAa,CAA8BO,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAA+C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/E,MAAMC,IAAI,GAAGR,OAAO,CAAC,CAAC;EAEtB,oBACEE,OAAA,CAACC,WAAW,CAACM,QAAQ;IAACC,KAAK,EAAEF,IAAK;IAAAF,QAAA,EAC/BA;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACP,EAAA,CARWF,YAA+C;EAAA,QAC7CL,OAAO;AAAA;AAAAe,EAAA,GADTV,YAA+C;AAU5D,OAAO,MAAMN,cAAc,GAAGA,CAAA,KAAM;EAAAiB,GAAA;EAClC,MAAMC,OAAO,GAAGnB,UAAU,CAACK,WAAW,CAAC;EACvC,IAAIc,OAAO,KAAKb,SAAS,EAAE;IACzB,MAAM,IAAIc,KAAK,CAAC,oDAAoD,CAAC;EACvE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWjB,cAAc;AAAA,IAAAgB,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}