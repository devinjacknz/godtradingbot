{"ast":null,"code":"import React from'react';import{Navigate,useRoutes}from'react-router-dom';import{useAuthContext}from'../hooks/useAuth';// layouts\nimport MainLayout from'../layouts/MainLayout';// pages\nimport HomePage from'../pages/HomePage';import AgentSelection from'../pages/AgentSelection';import{StrategyCreation}from'../pages/StrategyCreation';import BotIntegration from'../pages/BotIntegration';import KeyManagement from'../pages/KeyManagement';import Dashboard from'../pages/Dashboard';import Login from'../pages/Login';import SignUp from'../pages/SignUp';import{jsx as _jsx}from\"react/jsx-runtime\";export default function Router(){const{isAuthenticated}=useAuthContext();return useRoutes([{path:'/',element:/*#__PURE__*/_jsx(MainLayout,{}),children:[{path:'/',element:/*#__PURE__*/_jsx(HomePage,{})},{path:'/agent-selection',element:isAuthenticated?/*#__PURE__*/_jsx(AgentSelection,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\"})},{path:'/strategy-creation',element:isAuthenticated?/*#__PURE__*/_jsx(StrategyCreation,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\"})},{path:'/bot-integration',element:isAuthenticated?/*#__PURE__*/_jsx(BotIntegration,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\"})},{path:'/key-management',element:isAuthenticated?/*#__PURE__*/_jsx(KeyManagement,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\"})},{path:'/trading-agent/*',element:isAuthenticated?/*#__PURE__*/_jsx(Dashboard,{agentType:\"trading\"}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\"})},{path:'/defi-agent/*',element:isAuthenticated?/*#__PURE__*/_jsx(Dashboard,{agentType:\"defi\"}):/*#__PURE__*/_jsx(Navigate,{to:\"/login\"})}]},{path:'/login',element:!isAuthenticated?/*#__PURE__*/_jsx(Login,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/agent-selection\"})},{path:'/signup',element:!isAuthenticated?/*#__PURE__*/_jsx(SignUp,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/agent-selection\"})}]);}","map":{"version":3,"names":["React","Navigate","useRoutes","useAuthContext","MainLayout","HomePage","AgentSelection","StrategyCreation","BotIntegration","KeyManagement","Dashboard","Login","SignUp","jsx","_jsx","Router","isAuthenticated","path","element","children","to","agentType"],"sources":["/home/ubuntu/repos/tradingbot/src/frontend/src/routes/index.tsx"],"sourcesContent":["import React from 'react';\nimport { Navigate, useRoutes } from 'react-router-dom';\nimport { useAuthContext } from '../hooks/useAuth';\n\n// layouts\nimport MainLayout from '../layouts/MainLayout';\n\n// pages\nimport HomePage from '../pages/HomePage';\nimport AgentSelection from '../pages/AgentSelection';\nimport { StrategyCreation } from '../pages/StrategyCreation';\nimport BotIntegration from '../pages/BotIntegration';\nimport KeyManagement from '../pages/KeyManagement';\nimport Dashboard from '../pages/Dashboard';\nimport Login from '../pages/Login';\nimport SignUp from '../pages/SignUp';\n\nexport default function Router() {\n  const { isAuthenticated } = useAuthContext();\n\n  return useRoutes([\n    {\n      path: '/',\n      element: <MainLayout />,\n      children: [\n        { path: '/', element: <HomePage /> },\n        { \n          path: '/agent-selection', \n          element: isAuthenticated ? <AgentSelection /> : <Navigate to=\"/login\" /> \n        },\n        { \n          path: '/strategy-creation', \n          element: isAuthenticated ? <StrategyCreation /> : <Navigate to=\"/login\" /> \n        },\n        { \n          path: '/bot-integration', \n          element: isAuthenticated ? <BotIntegration /> : <Navigate to=\"/login\" /> \n        },\n        { \n          path: '/key-management', \n          element: isAuthenticated ? <KeyManagement /> : <Navigate to=\"/login\" /> \n        },\n        { \n          path: '/trading-agent/*', \n          element: isAuthenticated ? <Dashboard agentType=\"trading\" /> : <Navigate to=\"/login\" /> \n        },\n        { \n          path: '/defi-agent/*', \n          element: isAuthenticated ? <Dashboard agentType=\"defi\" /> : <Navigate to=\"/login\" /> \n        },\n      ],\n    },\n    {\n      path: '/login',\n      element: !isAuthenticated ? <Login /> : <Navigate to=\"/agent-selection\" />,\n    },\n    {\n      path: '/signup',\n      element: !isAuthenticated ? <SignUp /> : <Navigate to=\"/agent-selection\" />,\n    },\n  ]);\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,CAAEC,SAAS,KAAQ,kBAAkB,CACtD,OAASC,cAAc,KAAQ,kBAAkB,CAEjD;AACA,MAAO,CAAAC,UAAU,KAAM,uBAAuB,CAE9C;AACA,MAAO,CAAAC,QAAQ,KAAM,mBAAmB,CACxC,MAAO,CAAAC,cAAc,KAAM,yBAAyB,CACpD,OAASC,gBAAgB,KAAQ,2BAA2B,CAC5D,MAAO,CAAAC,cAAc,KAAM,yBAAyB,CACpD,MAAO,CAAAC,aAAa,KAAM,wBAAwB,CAClD,MAAO,CAAAC,SAAS,KAAM,oBAAoB,CAC1C,MAAO,CAAAC,KAAK,KAAM,gBAAgB,CAClC,MAAO,CAAAC,MAAM,KAAM,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAErC,cAAe,SAAS,CAAAC,MAAMA,CAAA,CAAG,CAC/B,KAAM,CAAEC,eAAgB,CAAC,CAAGb,cAAc,CAAC,CAAC,CAE5C,MAAO,CAAAD,SAAS,CAAC,CACf,CACEe,IAAI,CAAE,GAAG,CACTC,OAAO,cAAEJ,IAAA,CAACV,UAAU,GAAE,CAAC,CACvBe,QAAQ,CAAE,CACR,CAAEF,IAAI,CAAE,GAAG,CAAEC,OAAO,cAAEJ,IAAA,CAACT,QAAQ,GAAE,CAAE,CAAC,CACpC,CACEY,IAAI,CAAE,kBAAkB,CACxBC,OAAO,CAAEF,eAAe,cAAGF,IAAA,CAACR,cAAc,GAAE,CAAC,cAAGQ,IAAA,CAACb,QAAQ,EAACmB,EAAE,CAAC,QAAQ,CAAE,CACzE,CAAC,CACD,CACEH,IAAI,CAAE,oBAAoB,CAC1BC,OAAO,CAAEF,eAAe,cAAGF,IAAA,CAACP,gBAAgB,GAAE,CAAC,cAAGO,IAAA,CAACb,QAAQ,EAACmB,EAAE,CAAC,QAAQ,CAAE,CAC3E,CAAC,CACD,CACEH,IAAI,CAAE,kBAAkB,CACxBC,OAAO,CAAEF,eAAe,cAAGF,IAAA,CAACN,cAAc,GAAE,CAAC,cAAGM,IAAA,CAACb,QAAQ,EAACmB,EAAE,CAAC,QAAQ,CAAE,CACzE,CAAC,CACD,CACEH,IAAI,CAAE,iBAAiB,CACvBC,OAAO,CAAEF,eAAe,cAAGF,IAAA,CAACL,aAAa,GAAE,CAAC,cAAGK,IAAA,CAACb,QAAQ,EAACmB,EAAE,CAAC,QAAQ,CAAE,CACxE,CAAC,CACD,CACEH,IAAI,CAAE,kBAAkB,CACxBC,OAAO,CAAEF,eAAe,cAAGF,IAAA,CAACJ,SAAS,EAACW,SAAS,CAAC,SAAS,CAAE,CAAC,cAAGP,IAAA,CAACb,QAAQ,EAACmB,EAAE,CAAC,QAAQ,CAAE,CACxF,CAAC,CACD,CACEH,IAAI,CAAE,eAAe,CACrBC,OAAO,CAAEF,eAAe,cAAGF,IAAA,CAACJ,SAAS,EAACW,SAAS,CAAC,MAAM,CAAE,CAAC,cAAGP,IAAA,CAACb,QAAQ,EAACmB,EAAE,CAAC,QAAQ,CAAE,CACrF,CAAC,CAEL,CAAC,CACD,CACEH,IAAI,CAAE,QAAQ,CACdC,OAAO,CAAE,CAACF,eAAe,cAAGF,IAAA,CAACH,KAAK,GAAE,CAAC,cAAGG,IAAA,CAACb,QAAQ,EAACmB,EAAE,CAAC,kBAAkB,CAAE,CAC3E,CAAC,CACD,CACEH,IAAI,CAAE,SAAS,CACfC,OAAO,CAAE,CAACF,eAAe,cAAGF,IAAA,CAACF,MAAM,GAAE,CAAC,cAAGE,IAAA,CAACb,QAAQ,EAACmB,EAAE,CAAC,kBAAkB,CAAE,CAC5E,CAAC,CACF,CAAC,CACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}