{"ast":null,"code":"import React,{useState}from'react';import{Box,TextField,Button,Alert,Typography,Container,Card,CardContent,Link}from'@mui/material';import{useNavigate}from'react-router-dom';import{useAuthContext}from'../hooks/useAuth';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SignUp=()=>{const navigate=useNavigate();const{signup}=useAuthContext();const[email,setEmail]=useState('');const[username,setUsername]=useState('');const[password,setPassword]=useState('');const[error,setError]=useState(null);const[isLoading,setIsLoading]=useState(false);const handleSubmit=async e=>{e.preventDefault();setError(null);setIsLoading(true);try{const success=await signup(email,username,password);if(success){navigate('/dashboard');}else{setError('Signup failed. Please try again.');}}catch(err){setError('An unexpected error occurred. Please try again.');}finally{setIsLoading(false);}};return/*#__PURE__*/_jsx(Container,{maxWidth:\"sm\",children:/*#__PURE__*/_jsx(Box,{sx:{mt:8,mb:4},children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",component:\"h1\",align:\"center\",gutterBottom:true,children:\"Sign Up\"}),error&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mb:2},children:error}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(TextField,{margin:\"normal\",required:true,fullWidth:true,id:\"email\",label:\"Email Address\",name:\"email\",autoComplete:\"email\",autoFocus:true,value:email,onChange:e=>setEmail(e.target.value),disabled:isLoading}),/*#__PURE__*/_jsx(TextField,{margin:\"normal\",required:true,fullWidth:true,id:\"username\",label:\"Username\",name:\"username\",autoComplete:\"username\",value:username,onChange:e=>setUsername(e.target.value),disabled:isLoading}),/*#__PURE__*/_jsx(TextField,{margin:\"normal\",required:true,fullWidth:true,name:\"password\",label:\"Password\",type:\"password\",id:\"password\",autoComplete:\"new-password\",value:password,onChange:e=>setPassword(e.target.value),disabled:isLoading,helperText:\"Password must be at least 8 characters long and contain uppercase, lowercase, number, and special character\"}),/*#__PURE__*/_jsx(Button,{type:\"submit\",fullWidth:true,variant:\"contained\",sx:{mt:3,mb:2},disabled:isLoading,children:isLoading?'Signing up...':'Sign Up'}),/*#__PURE__*/_jsx(Box,{sx:{textAlign:'center'},children:/*#__PURE__*/_jsx(Link,{href:\"/login\",variant:\"body2\",children:\"Already have an account? Sign in\"})})]})]})})})});};export default SignUp;","map":{"version":3,"names":["React","useState","Box","TextField","Button","Alert","Typography","Container","Card","CardContent","Link","useNavigate","useAuthContext","jsx","_jsx","jsxs","_jsxs","SignUp","navigate","signup","email","setEmail","username","setUsername","password","setPassword","error","setError","isLoading","setIsLoading","handleSubmit","e","preventDefault","success","err","maxWidth","children","sx","mt","mb","variant","component","align","gutterBottom","severity","onSubmit","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","value","onChange","target","disabled","type","helperText","textAlign","href"],"sources":["/home/ubuntu/repos/tradingbot/src/frontend/src/pages/SignUp.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, TextField, Button, Alert, Typography, Container, Card, CardContent, Link } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuthContext } from '../hooks/useAuth';\n\nconst SignUp: React.FC = () => {\n  const navigate = useNavigate();\n  const { signup } = useAuthContext();\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError(null);\n    setIsLoading(true);\n\n    try {\n      const success = await signup(email, username, password);\n      if (success) {\n        navigate('/dashboard');\n      } else {\n        setError('Signup failed. Please try again.');\n      }\n    } catch (err) {\n      setError('An unexpected error occurred. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box sx={{ mt: 8, mb: 4 }}>\n        <Card>\n          <CardContent>\n            <Typography variant=\"h5\" component=\"h1\" align=\"center\" gutterBottom>\n              Sign Up\n            </Typography>\n            {error && (\n              <Alert severity=\"error\" sx={{ mb: 2 }}>\n                {error}\n              </Alert>\n            )}\n            <form onSubmit={handleSubmit}>\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                disabled={isLoading}\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"Username\"\n                name=\"username\"\n                autoComplete=\"username\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                disabled={isLoading}\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"new-password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                disabled={isLoading}\n                helperText=\"Password must be at least 8 characters long and contain uppercase, lowercase, number, and special character\"\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n                disabled={isLoading}\n              >\n                {isLoading ? 'Signing up...' : 'Sign Up'}\n              </Button>\n              <Box sx={{ textAlign: 'center' }}>\n                <Link href=\"/login\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Box>\n            </form>\n          </CardContent>\n        </Card>\n      </Box>\n    </Container>\n  );\n};\n\nexport default SignUp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}