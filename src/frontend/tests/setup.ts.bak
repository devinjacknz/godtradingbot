import "@testing-library/jest-dom";
import { vi } from "vitest";
import React from 'react';

// Mock React components
vi.mock('../pages/AgentSelection', () => ({
  default: () => React.createElement('div', null, [
    React.createElement('button', { key: 'trading' }, 'Trading Agent'),
    React.createElement('button', { key: 'defi' }, 'DeFi Agent'),
    React.createElement('button', { key: 'continue' }, 'Continue to Strategy Creation')
  ])
}));

vi.mock('../pages/StrategyCreation', () => ({
  default: () => React.createElement('form', null, [
    React.createElement('input', { key: 'name', 'aria-label': 'Strategy Name', placeholder: 'Enter strategy name' }),
    React.createElement('input', { key: 'desc', 'aria-label': 'Strategy Description' }),
    React.createElement('input', { key: 'promo', 'aria-label': 'Promotion Words' }),
    React.createElement('select', { key: 'model', 'aria-label': 'Preferred Model' }),
    React.createElement('input', { key: 'conf', 'aria-label': 'Minimum Confidence' }),
    React.createElement('select', { key: 'risk', 'aria-label': 'Risk Level' }),
    React.createElement('select', { key: 'time', 'aria-label': 'Timeframe' }),
    React.createElement('button', { key: 'submit' }, 'Create Strategy')
  ])
}));

vi.mock('../pages/BotIntegration', () => ({
  default: () => React.createElement('div', null, [
    React.createElement('div', { key: 'init' }, 'Initializing Bot'),
    React.createElement('div', { key: 'success' }, 'Bot Successfully Initialized'),
    React.createElement('div', { key: 'type' }, 'Agent Type: trading'),
    React.createElement('div', { key: 'strat' }, 'Strategy Name: Test Strategy'),
    React.createElement('button', { key: 'continue' }, 'Continue to Key Management')
  ])
}));

vi.mock('../pages/KeyManagement', () => ({
  default: () => React.createElement('div', null, [
    React.createElement('div', { key: 'gen' }, 'Generating Wallet'),
    React.createElement('div', { key: 'success' }, 'Wallet Generated'),
    React.createElement('div', { key: 'addr' }, 'Wallet Address'),
    React.createElement('div', { key: 'key' }, 'Private Key'),
    React.createElement('button', { key: 'continue' }, 'Continue to Dashboard')
  ])
}));

// Mock API client
vi.mock("../api/client", () => ({
  apiClient: {
    createStrategy: vi.fn().mockResolvedValue({
      success: true,
      data: {
        id: "test-strategy-id",
        confidence: 0.85,
        model_used: "deepseek-v3",
        fallback_used: false
      }
    })
  }
}));

// Mock DeepSeek service
vi.mock("../services/deepseek", () => ({
  generateTradingStrategy: vi.fn().mockResolvedValue({
    result: {
      id: "test-strategy-id",
      name: "Test Strategy",
      signals: ["MACD golden cross"],
      confidence: 0.85
    },
    confidence: 0.85,
    model_used: "deepseek-v3",
    fallback_used: false
  })
}));
