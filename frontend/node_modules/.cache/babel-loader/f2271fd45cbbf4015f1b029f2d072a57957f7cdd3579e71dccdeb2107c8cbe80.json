{"ast":null,"code":"import React,{useState,useEffect}from'react';export{};import{Box,Paper,Typography,TextField,Button,Alert,Dialog,DialogTitle,DialogContent,DialogActions,IconButton,InputAdornment,CircularProgress}from'@mui/material';import apiClient from'../api/client';import{Visibility as VisibilityIcon,VisibilityOff as VisibilityOffIcon,ContentCopy as CopyIcon}from'@mui/icons-material';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const KeyManagement=()=>{const navigate=useNavigate();const[showPrivateKey,setShowPrivateKey]=useState(false);const[confirmDialogOpen,setConfirmDialogOpen]=useState(false);const[error,setError]=useState(null);const[isSubmitting,setIsSubmitting]=useState(false);const[isLoading,setIsLoading]=useState(true);// These are the provided wallet credentials\nconst walletAddress='Bmy8pkxSMLHTdaCop7urr7b4FPqs3QojVsGuC9Ly4vsU';const privateKey='29f8rVGdqnNAeJPffprmrPzbXnbuhTwRML4EeZYRsG3oyHcXnFpVvSxrC87s3YJy4UqRoYQSpCTNMpBH8q5VkzMx';useEffect(()=>{const validateWallet=async()=>{try{const response=await apiClient.getWalletBalance(walletAddress);if(!response.success){throw new Error(response.error||'Failed to validate wallet');}localStorage.setItem('walletAddress',walletAddress);}catch(err){setError('Failed to validate wallet. Please try again.');}finally{setIsLoading(false);}};validateWallet();},[]);const handleCopyAddress=()=>{navigator.clipboard.writeText(walletAddress);};const handleCopyPrivateKey=()=>{navigator.clipboard.writeText(privateKey);};const handleConfirm=async()=>{setIsSubmitting(true);setError(null);try{const response=await apiClient.confirmWallet(walletAddress);if(response.success){// Store wallet info in localStorage\nlocalStorage.setItem('walletAddress',walletAddress);localStorage.setItem('walletConfirmed','true');// Close dialog and navigate to strategy creation\nsetConfirmDialogOpen(false);// Ensure navigation happens after state updates\nsetTimeout(()=>{navigate('/strategy-creation');},100);}else{throw new Error(typeof response.error==='string'?response.error:'Failed to confirm key management');}}catch(err){console.error('Key management confirmation error:',err);setError(err instanceof Error?err.message:'Failed to confirm key management. Please try again.');}finally{setIsSubmitting(false);}};if(isLoading){return/*#__PURE__*/_jsx(Box,{sx:{maxWidth:800,mx:'auto',p:3,display:'flex',justifyContent:'center'},children:/*#__PURE__*/_jsx(CircularProgress,{})});}return/*#__PURE__*/_jsxs(Box,{sx:{maxWidth:800,mx:'auto',p:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,children:\"Key Management\"}),error&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mb:3},children:error}),/*#__PURE__*/_jsx(Alert,{severity:\"warning\",sx:{mb:3},children:\"Important: Store your private key securely. Never share it with anyone.\"}),/*#__PURE__*/_jsxs(Paper,{sx:{p:3},children:[/*#__PURE__*/_jsxs(Box,{sx:{mb:4},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:\"Wallet Address\"}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,value:walletAddress,InputProps:{readOnly:true,endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:/*#__PURE__*/_jsx(IconButton,{onClick:handleCopyAddress,children:/*#__PURE__*/_jsx(CopyIcon,{})})})}})]}),/*#__PURE__*/_jsxs(Box,{sx:{mb:4},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:\"Private Key\"}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,type:showPrivateKey?'text':'password',value:privateKey,InputProps:{readOnly:true,endAdornment:/*#__PURE__*/_jsxs(InputAdornment,{position:\"end\",children:[/*#__PURE__*/_jsx(IconButton,{onClick:()=>setShowPrivateKey(!showPrivateKey),children:showPrivateKey?/*#__PURE__*/_jsx(VisibilityOffIcon,{}):/*#__PURE__*/_jsx(VisibilityIcon,{})}),/*#__PURE__*/_jsx(IconButton,{onClick:handleCopyPrivateKey,children:/*#__PURE__*/_jsx(CopyIcon,{})})]})}})]}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",size:\"large\",fullWidth:true,onClick:()=>setConfirmDialogOpen(true),children:\"I Have Saved My Keys Securely\"})]}),/*#__PURE__*/_jsxs(Dialog,{open:confirmDialogOpen,onClose:()=>setConfirmDialogOpen(false),children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Confirm Key Management\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsx(Typography,{children:\"Please confirm that you have saved your private key in a secure location. You will not be able to recover it if lost.\"})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setConfirmDialogOpen(false),disabled:isSubmitting,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:handleConfirm,variant:\"contained\",disabled:isSubmitting,children:isSubmitting?/*#__PURE__*/_jsx(CircularProgress,{size:24}):'Confirm'})]})]})]});};export default KeyManagement;","map":{"version":3,"names":["React","useState","useEffect","Box","Paper","Typography","TextField","Button","Alert","Dialog","DialogTitle","DialogContent","DialogActions","IconButton","InputAdornment","CircularProgress","apiClient","Visibility","VisibilityIcon","VisibilityOff","VisibilityOffIcon","ContentCopy","CopyIcon","useNavigate","jsx","_jsx","jsxs","_jsxs","KeyManagement","navigate","showPrivateKey","setShowPrivateKey","confirmDialogOpen","setConfirmDialogOpen","error","setError","isSubmitting","setIsSubmitting","isLoading","setIsLoading","walletAddress","privateKey","validateWallet","response","getWalletBalance","success","Error","localStorage","setItem","err","handleCopyAddress","navigator","clipboard","writeText","handleCopyPrivateKey","handleConfirm","confirmWallet","setTimeout","console","message","sx","maxWidth","mx","p","display","justifyContent","children","variant","gutterBottom","severity","mb","fullWidth","value","InputProps","readOnly","endAdornment","position","onClick","type","size","open","onClose","disabled"],"sources":["/home/ubuntu/repos/tradingbot/src/frontend/src/pages/KeyManagement.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nexport {};\nimport {\n  Box,\n  Paper,\n  Typography,\n  TextField,\n  Button,\n  Alert,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  IconButton,\n  InputAdornment,\n  CircularProgress,\n} from '@mui/material';\nimport apiClient from '../api/client';\nimport {\n  Visibility as VisibilityIcon,\n  VisibilityOff as VisibilityOffIcon,\n  ContentCopy as CopyIcon,\n} from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\n\nconst KeyManagement: React.FC = () => {\n  const navigate = useNavigate();\n  const [showPrivateKey, setShowPrivateKey] = useState(false);\n  const [confirmDialogOpen, setConfirmDialogOpen] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // These are the provided wallet credentials\n  const walletAddress = 'Bmy8pkxSMLHTdaCop7urr7b4FPqs3QojVsGuC9Ly4vsU';\n  const privateKey = '29f8rVGdqnNAeJPffprmrPzbXnbuhTwRML4EeZYRsG3oyHcXnFpVvSxrC87s3YJy4UqRoYQSpCTNMpBH8q5VkzMx';\n\n  useEffect(() => {\n    const validateWallet = async () => {\n      try {\n        const response = await apiClient.getWalletBalance(walletAddress);\n        if (!response.success) {\n          throw new Error(response.error || 'Failed to validate wallet');\n        }\n        localStorage.setItem('walletAddress', walletAddress);\n      } catch (err) {\n        setError('Failed to validate wallet. Please try again.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    validateWallet();\n  }, []);\n\n  const handleCopyAddress = () => {\n    navigator.clipboard.writeText(walletAddress);\n  };\n\n  const handleCopyPrivateKey = () => {\n    navigator.clipboard.writeText(privateKey);\n  };\n\n  const handleConfirm = async () => {\n    setIsSubmitting(true);\n    setError(null);\n    \n    try {\n      const response = await apiClient.confirmWallet(walletAddress);\n      \n      if (response.success) {\n        // Store wallet info in localStorage\n        localStorage.setItem('walletAddress', walletAddress);\n        localStorage.setItem('walletConfirmed', 'true');\n        \n        // Close dialog and navigate to strategy creation\n        setConfirmDialogOpen(false);\n        \n        // Ensure navigation happens after state updates\n        setTimeout(() => {\n          navigate('/strategy-creation');\n        }, 100);\n      } else {\n        throw new Error(typeof response.error === 'string' ? response.error : 'Failed to confirm key management');\n      }\n    } catch (err) {\n      console.error('Key management confirmation error:', err);\n      setError(err instanceof Error ? err.message : 'Failed to confirm key management. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <Box sx={{ maxWidth: 800, mx: 'auto', p: 3, display: 'flex', justifyContent: 'center' }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ maxWidth: 800, mx: 'auto', p: 3 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Key Management\n      </Typography>\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\n          {error}\n        </Alert>\n      )}\n\n      <Alert severity=\"warning\" sx={{ mb: 3 }}>\n        Important: Store your private key securely. Never share it with anyone.\n      </Alert>\n\n      <Paper sx={{ p: 3 }}>\n        <Box sx={{ mb: 4 }}>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            Wallet Address\n          </Typography>\n          <TextField\n            fullWidth\n            value={walletAddress}\n            InputProps={{\n              readOnly: true,\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton onClick={handleCopyAddress}>\n                    <CopyIcon />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Box>\n\n        <Box sx={{ mb: 4 }}>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            Private Key\n          </Typography>\n          <TextField\n            fullWidth\n            type={showPrivateKey ? 'text' : 'password'}\n            value={privateKey}\n            InputProps={{\n              readOnly: true,\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton onClick={() => setShowPrivateKey(!showPrivateKey)}>\n                    {showPrivateKey ? <VisibilityOffIcon /> : <VisibilityIcon />}\n                  </IconButton>\n                  <IconButton onClick={handleCopyPrivateKey}>\n                    <CopyIcon />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n        </Box>\n\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          fullWidth\n          onClick={() => setConfirmDialogOpen(true)}\n        >\n          I Have Saved My Keys Securely\n        </Button>\n      </Paper>\n\n      <Dialog\n        open={confirmDialogOpen}\n        onClose={() => setConfirmDialogOpen(false)}\n      >\n        <DialogTitle>Confirm Key Management</DialogTitle>\n        <DialogContent>\n          <Typography>\n            Please confirm that you have saved your private key in a secure location.\n            You will not be able to recover it if lost.\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button \n            onClick={() => setConfirmDialogOpen(false)}\n            disabled={isSubmitting}\n          >\n            Cancel\n          </Button>\n          <Button \n            onClick={handleConfirm} \n            variant=\"contained\"\n            disabled={isSubmitting}\n          >\n            {isSubmitting ? <CircularProgress size={24} /> : 'Confirm'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default KeyManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}