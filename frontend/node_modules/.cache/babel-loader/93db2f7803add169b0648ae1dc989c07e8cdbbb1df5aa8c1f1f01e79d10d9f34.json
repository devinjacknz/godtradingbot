{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport apiClient from '../api/client';\nexport const useAuthContext = () => {\n  _s();\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(() => {\n    const token = localStorage.getItem('token');\n    return !!token;\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const signup = useCallback(async (email, username, password) => {\n    setIsLoading(true);\n    try {\n      var _response$data;\n      const response = await apiClient.signup({\n        email,\n        username,\n        password\n      });\n      if (response.success && (_response$data = response.data) !== null && _response$data !== void 0 && _response$data.access_token) {\n        localStorage.setItem('token', response.data.access_token);\n        // Set user data\n        const newUser = {\n          id: username,\n          email,\n          username,\n          roles: [{\n            name: 'backend_developer',\n            permissions: ['execute_market_maker_trades']\n          }]\n        };\n        setUser(newUser);\n        setIsAuthenticated(true);\n        navigate('/agent-selection');\n        return true;\n      }\n      throw new Error(response.error || 'Signup failed');\n    } catch (error) {\n      console.error('Signup error:', error);\n      throw error instanceof Error ? error : new Error('An unexpected error occurred');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [navigate]);\n  const login = useCallback(async (email, password) => {\n    setIsLoading(true);\n    try {\n      var _response$data2;\n      const response = await apiClient.login({\n        username: email,\n        password\n      });\n      if (response.success && (_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.access_token) {\n        localStorage.setItem('token', response.data.access_token);\n        localStorage.setItem('token_expiry', String(Date.now() + response.data.expires_in * 1000));\n\n        // Set user data using email as identifier\n        const newUser = {\n          id: email,\n          email,\n          username: email.split('@')[0],\n          roles: [{\n            name: 'backend_developer',\n            permissions: ['execute_market_maker_trades']\n          }]\n        };\n        setUser(newUser);\n        setIsAuthenticated(true);\n        navigate('/agent-selection');\n        return true;\n      }\n      throw new Error(response.error || 'Login failed');\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error instanceof Error ? error : new Error('An unexpected error occurred');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [navigate]);\n\n  // Function to refresh the access token\n  const refreshToken = useCallback(async () => {\n    try {\n      var _response$data3;\n      const response = await apiClient.refreshToken();\n      if (response.success && (_response$data3 = response.data) !== null && _response$data3 !== void 0 && _response$data3.access_token) {\n        localStorage.setItem('token', response.data.access_token);\n        localStorage.setItem('token_expiry', String(Date.now() + response.data.expires_in * 1000));\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Token refresh failed:', error);\n      return false;\n    }\n  }, []);\n  const logout = useCallback(async () => {\n    try {\n      await apiClient.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      localStorage.removeItem('token');\n      localStorage.removeItem('token_expiry');\n      setUser(null);\n      setIsAuthenticated(false);\n      navigate('/login');\n    }\n  }, [navigate]);\n\n  // Add token expiry check effect\n  useEffect(() => {\n    const checkTokenExpiry = async () => {\n      const tokenExpiry = localStorage.getItem('token_expiry');\n      if (tokenExpiry) {\n        const expiryTime = parseInt(tokenExpiry);\n        if (Date.now() + 5 * 60 * 1000 >= expiryTime) {\n          const success = await refreshToken();\n          if (!success) {\n            await logout();\n          }\n        }\n      }\n    };\n    const interval = setInterval(checkTokenExpiry, 4 * 60 * 1000); // Check every 4 minutes\n    return () => clearInterval(interval);\n  }, [refreshToken, logout]);\n  return {\n    user,\n    isAuthenticated,\n    isLoading,\n    signup,\n    login,\n    logout,\n    refreshToken\n  };\n};\n_s(useAuthContext, \"0+3W/cuePhe6+SMEcfkfrVFfKzA=\", false, function () {\n  return [useNavigate];\n});","map":{"version":3,"names":["useState","useCallback","useEffect","useNavigate","apiClient","useAuthContext","_s","navigate","user","setUser","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","isLoading","setIsLoading","signup","email","username","password","_response$data","response","success","data","access_token","setItem","newUser","id","roles","name","permissions","Error","error","console","login","_response$data2","String","Date","now","expires_in","split","refreshToken","_response$data3","logout","removeItem","checkTokenExpiry","tokenExpiry","expiryTime","parseInt","interval","setInterval","clearInterval"],"sources":["/home/ubuntu/repos/tradingbot/src/frontend/src/hooks/useAuth.ts"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport apiClient from '../api/client';\n\nexport interface User {\n  id: string;\n  email: string;\n  username: string;\n  roles: Array<{\n    name: string;\n    permissions: string[];\n  }>;\n}\n\nexport interface AuthContextType {\n  user: User | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  signup: (email: string, username: string, password: string) => Promise<boolean>;\n  login: (email: string, password: string) => Promise<boolean>;\n  logout: () => Promise<void>;\n  refreshToken: () => Promise<boolean>;\n}\n\nexport const useAuthContext = (): AuthContextType => {\n  const navigate = useNavigate();\n  const [user, setUser] = useState<User | null>(null);\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean>(() => {\n    const token = localStorage.getItem('token');\n    return !!token;\n  });\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const signup = useCallback(async (email: string, username: string, password: string) => {\n    setIsLoading(true);\n    try {\n      const response = await apiClient.signup({ email, username, password });\n      if (response.success && response.data?.access_token) {\n        localStorage.setItem('token', response.data.access_token);\n        // Set user data\n        const newUser: User = {\n          id: username,\n          email,\n          username,\n          roles: [{ name: 'backend_developer', permissions: ['execute_market_maker_trades'] }]\n        };\n        setUser(newUser);\n        setIsAuthenticated(true);\n        navigate('/agent-selection');\n        return true;\n      }\n      throw new Error(response.error || 'Signup failed');\n    } catch (error) {\n      console.error('Signup error:', error);\n      throw error instanceof Error ? error : new Error('An unexpected error occurred');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [navigate]);\n\n  const login = useCallback(async (email: string, password: string) => {\n    setIsLoading(true);\n    try {\n      const response = await apiClient.login({ username: email, password });\n      if (response.success && response.data?.access_token) {\n        localStorage.setItem('token', response.data.access_token);\n        localStorage.setItem('token_expiry', String(Date.now() + (response.data.expires_in * 1000)));\n        \n        // Set user data using email as identifier\n        const newUser: User = {\n          id: email,\n          email,\n          username: email.split('@')[0],\n          roles: [{ name: 'backend_developer', permissions: ['execute_market_maker_trades'] }]\n        };\n        setUser(newUser);\n        setIsAuthenticated(true);\n        navigate('/agent-selection');\n        return true;\n      }\n      throw new Error(response.error || 'Login failed');\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error instanceof Error ? error : new Error('An unexpected error occurred');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [navigate]);\n\n  // Function to refresh the access token\n  const refreshToken = useCallback(async () => {\n    try {\n      const response = await apiClient.refreshToken();\n      if (response.success && response.data?.access_token) {\n        localStorage.setItem('token', response.data.access_token);\n        localStorage.setItem('token_expiry', String(Date.now() + (response.data.expires_in * 1000)));\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error('Token refresh failed:', error);\n      return false;\n    }\n  }, []);\n\n  const logout = useCallback(async () => {\n    try {\n      await apiClient.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      localStorage.removeItem('token');\n      localStorage.removeItem('token_expiry');\n      setUser(null);\n      setIsAuthenticated(false);\n      navigate('/login');\n    }\n  }, [navigate]);\n\n  // Add token expiry check effect\n  useEffect(() => {\n    const checkTokenExpiry = async () => {\n      const tokenExpiry = localStorage.getItem('token_expiry');\n      if (tokenExpiry) {\n        const expiryTime = parseInt(tokenExpiry);\n        if (Date.now() + 5 * 60 * 1000 >= expiryTime) {\n          const success = await refreshToken();\n          if (!success) {\n            await logout();\n          }\n        }\n      }\n    };\n\n    const interval = setInterval(checkTokenExpiry, 4 * 60 * 1000); // Check every 4 minutes\n    return () => clearInterval(interval);\n  }, [refreshToken, logout]);\n\n  return {\n    user,\n    isAuthenticated,\n    isLoading,\n    signup,\n    login,\n    logout,\n    refreshToken,\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}