{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport apiClient from '../api/client';\nexport const useAuthContext = () => {\n  _s();\n  const navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(() => {\n    const token = localStorage.getItem('token');\n    return !!token;\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const signup = useCallback(async (email, username, password) => {\n    setIsLoading(true);\n    try {\n      var _response$data;\n      const response = await apiClient.signup({\n        email,\n        username,\n        password\n      });\n      if (response.success && (_response$data = response.data) !== null && _response$data !== void 0 && _response$data.access_token) {\n        localStorage.setItem('token', response.data.access_token);\n        // Set user data\n        const newUser = {\n          id: username,\n          email,\n          username,\n          roles: [{\n            name: 'backend_developer',\n            permissions: ['execute_market_maker_trades']\n          }]\n        };\n        setUser(newUser);\n        setIsAuthenticated(true);\n        navigate('/agent-selection');\n        return true;\n      }\n      throw new Error(response.error || 'Signup failed');\n    } catch (error) {\n      console.error('Signup error:', error);\n      throw error instanceof Error ? error : new Error('An unexpected error occurred');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [navigate]);\n  const login = useCallback(async (email, password) => {\n    setIsLoading(true);\n    try {\n      var _response$data2;\n      const response = await apiClient.login({\n        username: email,\n        password\n      });\n      if (response.success && (_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.access_token) {\n        localStorage.setItem('token', response.data.access_token);\n        // Set user data using email as identifier\n        const newUser = {\n          id: email,\n          email,\n          username: email.split('@')[0],\n          roles: [{\n            name: 'backend_developer',\n            permissions: ['execute_market_maker_trades']\n          }]\n        };\n        setUser(newUser);\n        setIsAuthenticated(true);\n        navigate('/agent-selection');\n        return true;\n      }\n      throw new Error(response.error || 'Login failed');\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error instanceof Error ? error : new Error('An unexpected error occurred');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [navigate]);\n  const logout = useCallback(() => {\n    localStorage.removeItem('token');\n    setUser(null);\n    setIsAuthenticated(false);\n    navigate('/login');\n  }, [navigate]);\n  return {\n    user,\n    isAuthenticated,\n    isLoading,\n    signup,\n    login,\n    logout\n  };\n};\n_s(useAuthContext, \"ZBOG4sMWzwSkdLSmBHzGCavWFbE=\", false, function () {\n  return [useNavigate];\n});","map":{"version":3,"names":["useState","useCallback","useNavigate","apiClient","useAuthContext","_s","navigate","user","setUser","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","isLoading","setIsLoading","signup","email","username","password","_response$data","response","success","data","access_token","setItem","newUser","id","roles","name","permissions","Error","error","console","login","_response$data2","split","logout","removeItem"],"sources":["/home/ubuntu/repos/tradingbot/src/frontend/src/hooks/useAuth.ts"],"sourcesContent":["import { useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport apiClient from '../api/client';\n\nexport interface User {\n  id: string;\n  email: string;\n  username: string;\n  roles: Array<{\n    name: string;\n    permissions: string[];\n  }>;\n}\n\nexport interface AuthContextType {\n  user: User | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  signup: (email: string, username: string, password: string) => Promise<boolean>;\n  login: (email: string, password: string) => Promise<boolean>;\n  logout: () => void;\n}\n\nexport const useAuthContext = (): AuthContextType => {\n  const navigate = useNavigate();\n  const [user, setUser] = useState<User | null>(null);\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean>(() => {\n    const token = localStorage.getItem('token');\n    return !!token;\n  });\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const signup = useCallback(async (email: string, username: string, password: string) => {\n    setIsLoading(true);\n    try {\n      const response = await apiClient.signup({ email, username, password });\n      if (response.success && response.data?.access_token) {\n        localStorage.setItem('token', response.data.access_token);\n        // Set user data\n        const newUser: User = {\n          id: username,\n          email,\n          username,\n          roles: [{ name: 'backend_developer', permissions: ['execute_market_maker_trades'] }]\n        };\n        setUser(newUser);\n        setIsAuthenticated(true);\n        navigate('/agent-selection');\n        return true;\n      }\n      throw new Error(response.error || 'Signup failed');\n    } catch (error) {\n      console.error('Signup error:', error);\n      throw error instanceof Error ? error : new Error('An unexpected error occurred');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [navigate]);\n\n  const login = useCallback(async (email: string, password: string) => {\n    setIsLoading(true);\n    try {\n      const response = await apiClient.login({ username: email, password });\n      if (response.success && response.data?.access_token) {\n        localStorage.setItem('token', response.data.access_token);\n        // Set user data using email as identifier\n        const newUser: User = {\n          id: email,\n          email,\n          username: email.split('@')[0],\n          roles: [{ name: 'backend_developer', permissions: ['execute_market_maker_trades'] }]\n        };\n        setUser(newUser);\n        setIsAuthenticated(true);\n        navigate('/agent-selection');\n        return true;\n      }\n      throw new Error(response.error || 'Login failed');\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error instanceof Error ? error : new Error('An unexpected error occurred');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [navigate]);\n\n  const logout = useCallback(() => {\n    localStorage.removeItem('token');\n    setUser(null);\n    setIsAuthenticated(false);\n    navigate('/login');\n  }, [navigate]);\n\n  return {\n    user,\n    isAuthenticated,\n    isLoading,\n    signup,\n    login,\n    logout,\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}